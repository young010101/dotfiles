# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

# rice link can see below
# https://linux.cn/article-15955-1.html

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:Font Awesome 10
font pango:Hack Nerd Font Mono 10
# font 
# font pango: System San Francisco Display 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
# bindsym $mod+Return exec urxvt -depth 32 -bg rgba:0000/0000/0000/cccc
bindsym $mod+Return exec alacritty

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
#bindsym $mod+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+b split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1 "
set $ws2 "2 "
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10 "

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# set $bg-color 	         #234222
set $bg-color 	         #2a234299
# set $bg-color 	         #2a2342
set $inactive-bg-color   #2f343f4d
set $text-color          #f3f4f5
# set $inactive-text-color #676E7D
set $inactive-text-color #dbdbdb
set $urgent-bg-color     #F28FAD
set $indicator    #F28FAD

# window colors
#                       border              background         text                 indicator
client.focused          $bg-color           $bg-color          $text-color          $indicator
client.unfocused        $inactive-bg-color  $inactive-bg-color $inactive-text-color $indicator
client.focused_inactive $inactive-bg-color  $inactive-bg-color $inactive-text-color $indicator
client.urgent           $urgent-bg-color    $urgent-bg-color   $text-color          $indicator

set $focused-ws #523d6480
set $bar-color  #523d644D
# set $bar-color  #523d640D
# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        # status_command i3status
        status_command i3blocks -c /home/natr/.i3/i3blocks.conf
        # i3bar_command echo hello
        # status_command exec ip -c a
        # https://i3wm.org/docs/userguide.html#_configuring_i3bar
        # i3bar_command i3bar --transparency #00000000
        i3bar_command i3bar --transparency 
        font pango: Droid Sans Mono 11
        # padding 2px 12px 2px 12px
        # tray_padding 0
        colors {
            background $bar-color
            separator #757575
            statusline #bfbfbf
            # binding_mode #757575
            #                  border             background         text
            focused_workspace  $focuse-ws         $focuse-ws         $text-color
            inactive_workspace $inactive-bg-color $inactive-bg-color $inactive-text-color
            urgent_workspace   $urgent-bg-color   $urgent-bg-color   $text-color
        }
}

# PS: Use `xprop` to get class of program.
# for_window [class="TelegramDesktop"] floating enable
# for_window [class="Chromium"] floating enable
assign [class="TelegramDesktop"] $ws9
assign [class="qBittorrent"] $ws9
assign [class="Clash for Windows"] $ws9
assign [class="Wine"] $ws6
assign [class="obsidian"] $ws3

# https://www.youtube.com/watch?v=8-S0cWnLBKg&t=9s
# 16:50/29:53
# arandr
# monitor
# When I buy a new screen!

# keybin
# bindsym $mod+Shift+z exec i3lock --color 00203f
# bindsym $mod+Shift+z exec $HOME/.config/scripts/lock 
bindsym $mod+x exec $HOME/.config/scripts/lock 
#$bg-color
bindsym XF87AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
# bindsym $mod+Shift+t exec pactl set-sink-volume bluez_sink.7C_2A_CA_D9_F6_6E.a2dp_sink +9%
# bindsym $mod+d exec rofi -lines 3 -eh 2 -width 20 -padding 80 -opacity "85" -bw 0 -bc "$bg-color" -bg "$bg-color" -fg "$text-color" -hlbg "$bg-color" -hlfg "#9575cd" -show run 
# bindsym $mod+d exec rofi -bg "$bg-color" -fg "$text-color" -show run 
# bindsym $mod+d exec rofi -bg "#ffffff" -fg "$text-color" -show run 
# bindsym $mod+d exec rofi -show run -opacity "85"
bindsym $mod+d exec rofi -theme solarized -font "hack 10" -show run
bindsym $mod+Shift+d exec rofi -theme solarized -font "hack 10" -show drun

exec_always feh --bg-fill ~/qing.jpg
# exec_always xrandr --output eDP-1 --primary --mode 1920x1080 --pos 871x134 --rotate normal --output HDMI-1 --off --output DP-1-0 --off --output DP-1-1 --off
exec_always xrandr --output eDP-1 --mode 1920x1080 --pos 1920x0 --rotate normal --output HDMI-1 --primary --mode 1920x1080 --pos 0x0 --rotate normal --output DP-1-0 --off --output DP-1-1 --off
exec /opt/clash-for-windows-bin/cfw
exec /opt/apps/com.qq.weixin.deepin/files/run.sh
exec telegram-desktop
# exec goldendict
exec qbittorrent
# https://github.com/yshui/picom/issues/443
# exec --no-startup-id compton -f
# exec_always picom -f
# exec_always --no-startup-id picom -CGb
# exec --no-startup-id picom --config $HOME/.config/picom.conf --experimental-backends
exec --no-startup-id picom --config $HOME/.config/picom.conf 
exec --no-startup-id fcitx5 -d
#exec_always --no-startup-id $HOME/.config/polybar/launch.sh
exec --no-startup-id /usr/bin/setxkbmap -option "ctrl:nocaps"
exec --no-startup-id rclone mount onedrivetju:/ onedrivetju --vfs-cache-mode full
exec --no-startup-id rclone mount onedrivetju:/Pictures Pictures --vfs-cache-mode full
exec --no-startup-id rclone mount onedrivetju:/articles articles --vfs-cache-mode full
exec alacritty -e tmux a
# exec firefox
exec /usr/bin/google-chrome-stable --proxy-server="socks5://127.0.0.1:7890" --restore-last-session
# exec /usr/bin/chromium --proxy-server="socks5://127.0.0.1:7890" --restore-last-session
bindsym $mod+Shift+z exec /usr/bin/google-chrome-stable --proxy-server="socks5://127.0.0.1:7890" --restore-last-session
# bindsym $mod+Shift+z exec /usr/bin/chromium --proxy-server="socks5://127.0.0.1:7890" --restore-last-session
exec obsidian

# TODO: set some pre check for transplant.
# exec --no-startup-id sshfs cyangonnes:/home/cyang $HOME/onnes
# exec --no-startup-id sshfs cyangonnes:/data/users/cyang $HOME/cyangdata
exec --no-startup-id sshfs cyangbloch:/home/cyang $HOME/onnes
exec_always --no-startup-id sshfs cyangbloch:/data/users/cyang $HOME/cyangdata


# Configure 5px of space between windows and to the screen edges.
# gaps inner 5px

# Configure an additional 5px of extra space to the screen edges,
# for a total gap of 10px to the screen edges, and 5px between windows.
# gaps outer 5px

# Overwrite gaps to 0, I need all the space I can get on workspace 3.
# workspace 3 gaps inner 0
# workspace 3 gaps outer 0

# Only enable outer gaps when there is exactly one window or split container on the workspace.
# smart_gaps inverse_outer

smart_borders on

# default gaps
gaps inner 15
gaps outer 5
# gaps
set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"
mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0
        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0
        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 5
        bindsym minus gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0
        bindsym Shift+plus  gaps horizontal all plus 5
        bindsym Shift+minus gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 5
        bindsym minus gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0
        bindsym Shift+plus  gaps vertical all plus 5
        bindsym Shift+minus gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 5
        bindsym minus gaps top current minus 5
        bindsym 0     gaps top current set 0
        bindsym Shift+plus  gaps top all plus 5
        bindsym Shift+minus gaps top all minus 5
        bindsym Shift+0     gaps top all set 0
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 5
        bindsym minus gaps right current minus 5
        bindsym 0     gaps right current set 0
        bindsym Shift+plus  gaps right all plus 5
        bindsym Shift+minus gaps right all minus 5
        bindsym Shift+0     gaps right all set 0
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 5
        bindsym minus gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0
        bindsym Shift+plus  gaps bottom all plus 5
        bindsym Shift+minus gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 5
        bindsym minus gaps left current minus 5
        bindsym 0     gaps left current set 0
        bindsym Shift+plus  gaps left all plus 5
        bindsym Shift+minus gaps left all minus 5
        bindsym Shift+0     gaps left all set 0
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

# Moving workspaces between screens
bindsym $mod+p move workspace to output right
