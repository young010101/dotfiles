# =============================================================================
#                         COMMON SHELL CONFIGURATION
# =============================================================================
# Structure:
#   1. Common Aliases
#   2. Common Functions
#   3. Common Environment Variables
#   4. Common Tools Configuration
# =============================================================================

# --------------------------- 1. Common Aliases ------------------------------
# System monitoring
alias nv="nvidia-smi"
alias wnv="watch -n 0.5 -d nvidia-smi"
alias ports='netstat -tulanp'
alias mem='free -h'
alias df='df -h'

# Proxy settings
if grep -qi microsoft /proc/version 2>/dev/null; then
    iproute=$(ip route show | grep -i default | awk '{ print $3}')
    alias proxy='export http_proxy=http://$iproute:7890 https_proxy=http://$iproute:7890 all_proxy=socks5://$iproute:7890'
else
    alias proxy='export http_proxy=http://127.0.0.1:7890 https_proxy=http://127.0.0.1:7890 all_proxy=socks5://127.0.0.1:7890'
fi
alias unproxy='unset http_proxy https_proxy all_proxy'
alias checkproxy='curl ipinfo.io'

# Navigation
alias cdcy="cd $data_PATH"
alias ..='cd ..'
alias ...='cd ../..'
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Development
alias vi=nvim
alias py='python'
alias pip='python -m pip'
alias activate='source activate'

# Git shortcuts
alias gs='git status'
alias ga='git add'
alias gc='git commit'
alias gp='git push'
alias gl='git pull'
alias gd='git diff'

# --------------------------- 2. Common Functions --------------------------
# Extract various archive formats
extract() {
    if [ -f "$1" ]; then
        case "$1" in
            *.tar.bz2)   tar xjf "$1"   ;;
            *.tar.gz)    tar xzf "$1"   ;;
            *.bz2)       bunzip2 "$1"   ;;
            *.rar)       unrar x "$1"   ;;
            *.gz)        gunzip "$1"    ;;
            *.tar)       tar xf "$1"    ;;
            *.tbz2)      tar xjf "$1"   ;;
            *.tgz)       tar xzf "$1"   ;;
            *.zip)       unzip "$1"     ;;
            *.Z)         uncompress "$1" ;;
            *.7z)        7z x "$1"      ;;
            *)          echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

# Create and enter directory
mkcd() {
    mkdir -p "$1" && cd "$1"
}

# Fun cowsay function
say() {
    # Check if required commands are installed
    if ! command -v cowsay >/dev/null || ! command -v fortune >/dev/null || ! command -v lolcat >/dev/null; then
        echo "Installing required packages..."
        if command -v apt-get >/dev/null; then
            sudo apt-get update && sudo apt-get install -y cowsay fortune-mod ruby
            sudo gem install lolcat
        elif command -v yum >/dev/null; then
            sudo yum install -y cowsay fortune-mod ruby
            sudo gem install lolcat
        elif command -v pacman >/dev/null; then
            sudo pacman -S --noconfirm cowsay fortune-mod ruby
            sudo gem install lolcat
        else
            echo "Could not install required packages. Please install cowsay, fortune and lolcat manually."
            return 1
        fi
    fi

    # Array of available cowfiles
    local cowfiles=($(cowsay -l | tail -n +2))
    
    # Get a random cowfile
    local random_cow=${cowfiles[$RANDOM % ${#cowfiles[@]}]}
    
    if [ $# -eq 0 ]; then
        # If no argument provided, use fortune
        fortune | cowsay -f $random_cow | lolcat
    else
        # If argument provided, use that as the message
        cowsay -f $random_cow "$*" | lolcat
    fi
}

# Greeting with cowsay
if command -v cowsay >/dev/null && command -v fortune >/dev/null && command -v lolcat >/dev/null; then
    say "Welcome back, $(whoami)! ðŸš€"
fi

# --------------------------- 3. Common Environment Variables -------------
export EDITOR='nvim'
 